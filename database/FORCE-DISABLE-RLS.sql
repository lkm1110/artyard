-- ===================================
-- RLS Í∞ïÏ†ú ÎπÑÌôúÏÑ±Ìôî (ÏµúÏ¢Ö Î≤ÑÏ†Ñ)
-- Ïù¥Ï†Ñ Ïä§ÌÅ¨Î¶ΩÌä∏Í∞Ä ÏïàÎ®πÌòîÎã§Î©¥ Ïù¥Í±∏ ÏãúÎèÑ
-- ===================================

-- Step 1: ÌÖåÏù¥Î∏î Ï°¥Ïû¨ ÌôïÏù∏
DO $$
BEGIN
    RAISE NOTICE 'üîç Checking tables...';
    
    IF EXISTS (SELECT 1 FROM pg_tables WHERE schemaname = 'public' AND tablename = 'bookmarks') THEN
        RAISE NOTICE '‚úÖ bookmarks table exists';
    ELSE
        RAISE WARNING '‚ùå bookmarks table NOT found';
    END IF;
    
    IF EXISTS (SELECT 1 FROM pg_tables WHERE schemaname = 'public' AND tablename = 'likes') THEN
        RAISE NOTICE '‚úÖ likes table exists';
    ELSE
        RAISE WARNING '‚ùå likes table NOT found';
    END IF;
    
    IF EXISTS (SELECT 1 FROM pg_tables WHERE schemaname = 'public' AND tablename = 'follows') THEN
        RAISE NOTICE '‚úÖ follows table exists';
    ELSE
        RAISE WARNING '‚ùå follows table NOT found';
    END IF;
END $$;

-- Step 2: Í∞Å ÌÖåÏù¥Î∏îÎ≥ÑÎ°ú Í∞úÎ≥Ñ Ï≤òÎ¶¨
DO $$
BEGIN
    -- bookmarks
    BEGIN
        ALTER TABLE public.bookmarks DISABLE ROW LEVEL SECURITY;
        RAISE NOTICE '‚úÖ RLS disabled for bookmarks';
    EXCEPTION
        WHEN OTHERS THEN
            RAISE WARNING '‚ö†Ô∏è bookmarks: %', SQLERRM;
    END;
    
    -- likes
    BEGIN
        ALTER TABLE public.likes DISABLE ROW LEVEL SECURITY;
        RAISE NOTICE '‚úÖ RLS disabled for likes';
    EXCEPTION
        WHEN OTHERS THEN
            RAISE WARNING '‚ö†Ô∏è likes: %', SQLERRM;
    END;
    
    -- follows
    BEGIN
        ALTER TABLE public.follows DISABLE ROW LEVEL SECURITY;
        RAISE NOTICE '‚úÖ RLS disabled for follows';
    EXCEPTION
        WHEN OTHERS THEN
            RAISE WARNING '‚ö†Ô∏è follows: %', SQLERRM;
    END;
END $$;

-- Step 3: Ï†ïÏ±Ö ÏÇ≠Ï†ú (ÏûàÎã§Î©¥)
DO $$
DECLARE
    pol RECORD;
BEGIN
    RAISE NOTICE 'üóëÔ∏è Dropping policies...';
    
    -- bookmarks policies
    FOR pol IN (
        SELECT policyname 
        FROM pg_policies 
        WHERE schemaname = 'public' AND tablename = 'bookmarks'
    ) LOOP
        BEGIN
            EXECUTE format('DROP POLICY IF EXISTS %I ON public.bookmarks', pol.policyname);
            RAISE NOTICE '‚úÖ Dropped: bookmarks.%', pol.policyname;
        EXCEPTION
            WHEN OTHERS THEN
                RAISE WARNING '‚ö†Ô∏è Failed to drop bookmarks.%: %', pol.policyname, SQLERRM;
        END;
    END LOOP;
    
    -- likes policies
    FOR pol IN (
        SELECT policyname 
        FROM pg_policies 
        WHERE schemaname = 'public' AND tablename = 'likes'
    ) LOOP
        BEGIN
            EXECUTE format('DROP POLICY IF EXISTS %I ON public.likes', pol.policyname);
            RAISE NOTICE '‚úÖ Dropped: likes.%', pol.policyname;
        EXCEPTION
            WHEN OTHERS THEN
                RAISE WARNING '‚ö†Ô∏è Failed to drop likes.%: %', pol.policyname, SQLERRM;
        END;
    END LOOP;
    
    -- follows policies
    FOR pol IN (
        SELECT policyname 
        FROM pg_policies 
        WHERE schemaname = 'public' AND tablename = 'follows'
    ) LOOP
        BEGIN
            EXECUTE format('DROP POLICY IF EXISTS %I ON public.follows', pol.policyname);
            RAISE NOTICE '‚úÖ Dropped: follows.%', pol.policyname;
        EXCEPTION
            WHEN OTHERS THEN
                RAISE WARNING '‚ö†Ô∏è Failed to drop follows.%: %', pol.policyname, SQLERRM;
        END;
    END LOOP;
END $$;

-- Step 4: Í∂åÌïú Î∂ÄÏó¨
DO $$
BEGIN
    RAISE NOTICE 'üîê Granting permissions...';
    
    BEGIN
        GRANT ALL ON public.bookmarks TO anon;
        GRANT ALL ON public.bookmarks TO authenticated;
        GRANT ALL ON public.bookmarks TO service_role;
        RAISE NOTICE '‚úÖ Permissions granted for bookmarks';
    EXCEPTION
        WHEN OTHERS THEN
            RAISE WARNING '‚ö†Ô∏è bookmarks permissions: %', SQLERRM;
    END;
    
    BEGIN
        GRANT ALL ON public.likes TO anon;
        GRANT ALL ON public.likes TO authenticated;
        GRANT ALL ON public.likes TO service_role;
        RAISE NOTICE '‚úÖ Permissions granted for likes';
    EXCEPTION
        WHEN OTHERS THEN
            RAISE WARNING '‚ö†Ô∏è likes permissions: %', SQLERRM;
    END;
    
    BEGIN
        GRANT ALL ON public.follows TO anon;
        GRANT ALL ON public.follows TO authenticated;
        GRANT ALL ON public.follows TO service_role;
        RAISE NOTICE '‚úÖ Permissions granted for follows';
    EXCEPTION
        WHEN OTHERS THEN
            RAISE WARNING '‚ö†Ô∏è follows permissions: %', SQLERRM;
    END;
END $$;

-- Step 5: ÌòÑÏû¨ ÏÉÅÌÉú ÌôïÏù∏
SELECT 
    schemaname,
    tablename,
    CASE 
        WHEN rowsecurity THEN '‚ùå ENABLED (Î¨∏Ï†ú!)' 
        ELSE '‚úÖ DISABLED (Ï†ïÏÉÅ)' 
    END as rls_status,
    (SELECT COUNT(*) FROM pg_policies WHERE pg_policies.tablename = pg_tables.tablename) as policy_count
FROM pg_tables 
WHERE schemaname = 'public' 
AND tablename IN ('bookmarks', 'likes', 'follows')
ORDER BY tablename;

-- Ïã§Ìñâ ÌõÑ Í≤∞Í≥ºÎ•º ÌôïÏù∏ÌïòÏÑ∏Ïöî!

